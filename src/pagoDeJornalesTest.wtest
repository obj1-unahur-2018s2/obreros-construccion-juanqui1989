import obra.*
import obreros.*
import uocra.*
describe "pago de jornales" {
	//nueva obra
	const obraDeHurlingham = new Obra()
	//nuevos obreros
	const juan = new Albanil()
	const jose = new Albanil()
	const jaime = new Gasista()
	const felipe = new Gasista()
	const raul = new Plomero()
	const pedro = new Electricista()
	const pepito = new Electricista()
	fixture{
		//materiales
		obraDeHurlingham.ladrillos(1000)
		obraDeHurlingham.canios(400)
		obraDeHurlingham.fosforos(8000)
		obraDeHurlingham.arandelas(500)
		//agregar obreros
		juan.disponibilidad(false)
		obraDeHurlingham.agregarObreroAPlantilla(juan)
		obraDeHurlingham.agregarObreroAPlantilla(jose)
		obraDeHurlingham.agregarObreroAPlantilla(jaime)
		obraDeHurlingham.agregarObreroAPlantilla(felipe)
		obraDeHurlingham.agregarObreroAPlantilla(raul)
		
		//agregar efectivo 
		obraDeHurlingham.efectivo(100000)
		//registrar una jornada
		obraDeHurlingham.registrarJornadaLaboral()
		}
	test "cuanto hay que pagarle a jose" {
		assert.equals(2000,jose.totalACobrar())
	}
	test "cuanto tiene para cobrar los obreros" {
		
		assert.equals(11000,obraDeHurlingham.importeAdeudado())
	}
	
	test "pagarle a los obreros" {
		obraDeHurlingham. pagarleALosObreros()
		
		assert.equals(89000,obraDeHurlingham.efectivo())
	}
	
	test "despues de dos jornadas" {
		juan.disponibilidad(true)
		obraDeHurlingham.agregarObreroAPlantilla(juan)
		obraDeHurlingham.agregarObreroAPlantilla(pedro)
		obraDeHurlingham.agregarObreroAPlantilla(pepito)
		raul.disponibilidad(false)
		obraDeHurlingham.quitarObrerosAPlantilla(raul)
		obraDeHurlingham.registrarJornadaLaboral()
		assert.equals(4000,jose.totalACobrar())
		
		obraDeHurlingham. pagarleALosObreros()
		
		assert.equals(78000,obraDeHurlingham.efectivo())
		
	}
	
}